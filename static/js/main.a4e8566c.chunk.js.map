{"version":3,"sources":["components/Header.tsx","components/VotepercentageBar.tsx","components/ModifiedCard.tsx","hooks/useVote.tsx","components/stepper.tsx","components/pageVote.tsx","components/tabs.tsx","components/Mains.tsx","components/time.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","container","padding","spacing","display","justifyContent","gap","Header","classes","useEthers","account","activateBrowserWallet","deactivate","isConnected","undefined","className","Button","variant","onClick","color","LinearProgressWithLabel","props","Box","alignItems","width","mr","LinearProgress","minWidth","Typography","Math","round","value","root","LinearWithValueLabel","totalV","voteC","per_vote","Number","maxWidth","flexGrow","media","height","MediaCard","name","index","chainId","abi","Vote","cID","String","contract_address","netmap","constants","AddressZero","Contract_Interface","utils","Interface","Vote_Contract","Contract","useContractFunction","transactionName","vote","send","test_win_status","state","useEffect","status","console","log","test_call","useVote","Card","CardActionArea","CardContent","gutterBottom","component","CardActions","createStyles","button","marginTop","marginRight","actionsContainer","marginBottom","resetContainer","getStepContent","step","handleInputChange","amount","Input","onChange","VerticalLinearStepper","React","useState","activeStep","setActiveStep","steps","setAmount","setaddCandidateBulk","addCandidateBulk_status","AddBulkCand","AddCandidates","setaddVoteBulk","addCandidateVote_status","AddBulkVote","AddVote","StartVote","StartVote_status","StartVoting","event","valueArray","target","split","map","item","trim","handleNext","time_val","int_time_value","parseInt","prevActiveStep","handleBack","Stepper","orientation","label","Step","StepLabel","StepContent","disabled","length","Paper","square","elevation","flexWrap","PageVote","acc","useContractCall","address","method","args","value2","e","PageResults","Totalvote","Tv","formatUnits","vc","voteCount","AdminPage","backgroundColor","palette","background","paper","LabTabs","prop","setValue","handleChange","newValue","tabDisabled","setTabDisabled","vowner","TabContext","AppBar","position","TabList","aria-label","Tab","TabPanel","Main","owner","m","VInfo","timeShow","App","DAppProvider","config","supportedChains","ChainId","Kovan","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m38TAGMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACPC,QAASF,EAAMG,QAAQ,GACvBC,QAAS,OACTC,eAAgB,WAChBC,IAAKN,EAAMG,QAAQ,QAKdI,EAAS,WAClB,IAAMC,EAAUV,IADQ,EAG+BW,cAA/CC,EAHgB,EAGhBA,QAASC,EAHO,EAGPA,sBAAuBC,EAHhB,EAGgBA,WAElCC,OAA0BC,IAAZJ,EAEpB,OACI,qBAAKK,UAAWP,EAAQP,UAAxB,SACKY,EACG,cAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASN,EAArC,wBAIA,cAACI,EAAA,EAAD,CACIG,MAAM,UACNF,QAAQ,YACRC,QAAS,kBAAMP,KAHnB,wB,oICpBhB,SAASS,EAAwBC,GAC/B,OACE,eAACC,EAAA,EAAD,CAAKlB,QAAQ,OAAOmB,WAAW,SAA/B,UACE,cAACD,EAAA,EAAD,CAAKE,MAAM,OAAOC,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,aAAgBT,QAAQ,eAAkBI,MAE5C,cAACC,EAAA,EAAD,CAAKK,SAAU,GAAf,SACE,cAACC,EAAA,EAAD,CAAYX,QAAQ,QAAQE,MAAM,gBAAlC,mBAAsDU,KAAKC,MACzDT,EAAMU,OADR,YAQR,IAAMjC,EAAYC,YAAW,CAC3BiC,KAAM,CACJR,MAAO,UAUI,SAASS,EAAT,GAAwD,IAAzBC,EAAwB,EAAxBA,OAAOC,EAAiB,EAAjBA,MAC7C3B,EAAUV,IACZsC,EAAiBC,OAAOF,GAAOE,OAAOH,GAAS,IAQnD,OACE,qBAAKnB,UAAWP,EAAQwB,KAAxB,SAEE,cAACZ,EAAD,CAAyBW,MAAOK,M,iECnChCtC,EAAYC,YAAW,CAC3BiC,KAAM,CACJM,SAAU,IACVC,SAAS,GAGXC,MAAO,CACLC,OAAQ,OAYG,SAASC,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,MAChCpC,EAAUV,IAD6C,ECrBxC,WAAO,IAElB+C,EAAYpC,cAAZoC,QACFC,EAAQC,EAARD,IACFE,EAAIC,OAAOJ,GACTK,EAAkBL,EAASM,EAAOH,GAAP,KAAoB,GAAKI,IAAUC,YAC9DC,EAAqB,IAAIC,IAAMC,UAAUV,GACzCW,EAAgB,IAAIC,IAASR,EAAkBI,GAP5B,EAYzBK,YAAoBF,EAAe,gBAAiB,CAChDG,gBAAiB,eAFPC,EAXW,EAWjBC,KAAoBC,EAXH,EAWJC,MA4CrB,OARAC,qBAAU,WACyB,YAA3BF,EAAgBG,OACjBC,QAAQC,IAAI,QAEXD,QAAQC,IAAIL,KAEjB,CAACA,IAEG,CAAEM,UAZS,SAACzB,GAEf,OAAOiB,EAAKjB,IAUImB,mBDhCiBO,GAA/BD,EAFqD,EAErDA,UAFqD,EAE1CN,gBAKnB,OACE,eAACQ,EAAA,EAAD,CAAMxD,UAAWP,EAAQwB,KAAzB,UACE,cAACwC,EAAA,EAAD,UAEE,cAACC,EAAA,EAAD,UACE,cAAC7C,EAAA,EAAD,CAAY8C,cAAY,EAACzD,QAAQ,KAAK0D,UAAU,KAAhD,SACGhC,QAKP,cAACiC,EAAA,EAAD,UAIC,cAAC5D,EAAA,EAAD,CAAQE,QAnBM,WACjB,OAAOmD,EAAUzB,IAkBe3B,QAAQ,YAAYE,MAAM,UAAvD,uB,mEEtCDrB,EAAYC,aAAW,SAACC,GAAD,OAC3B6E,YAAa,CACX7C,KAAM,CACJR,MAAO,QAETsD,OAAQ,CACNC,UAAW/E,EAAMG,QAAQ,GACzB6E,YAAahF,EAAMG,QAAQ,IAE7B8E,iBAAkB,CAChBC,aAAclF,EAAMG,QAAQ,IAE9BgF,eAAgB,CACdjF,QAASF,EAAMG,QAAQ,SAS7B,SAASiF,EAAeC,EAAaC,EAAsBC,GAKzD,OAAQF,GACN,KAAK,EASL,KAAK,EAOL,KAAK,EACD,OAAQ,8BACJ,cAACG,EAAA,EAAD,CAAOC,SAAUH,MAKzB,QACE,MAAO,gBAIE,SAASI,IACtB,IAAMlF,EAAUV,IAD8B,EAEV6F,IAAMC,SAAS,GAFL,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAGxCC,EAxCC,CAAC,iBAAkB,aAAc,cAqCM,EAKlBJ,IAAMC,SAA0B,CAAC,KALf,mBAKvCL,EALuC,KAK/BS,EAL+B,ODOnB,WAAO,IAExBnD,EAAYpC,cAAZoC,QACFC,EAAQC,EAARD,IACFE,EAAIC,OAAOJ,GACTK,EAAkBL,EAASM,EAAOH,GAAP,KAAoB,GAAKI,IAAUC,YAC9DC,EAAqB,IAAIC,IAAMC,UAAUV,GACzCW,EAAgB,IAAIC,IAASR,EAAkBI,GAPtB,EAY/BK,YAAoBF,EAAe,mBAAoB,CACnDG,gBAAiB,4BAFPqC,EAXiB,EAWvBnC,KAAmCoC,EAXZ,EAWKlC,MAqBpC,OARAC,qBAAU,WACiC,YAAnCiC,EAAwBhC,OACzBC,QAAQC,IAAI,kBAEXD,QAAQC,IAAI6B,KAEjB,CAACC,IAEG,CAAEC,YAbU,SAACvD,GAGhB,OADAuB,QAAQC,IAAR,+BAAoCxB,IAC7BqD,EAAoBrD,IAUTsD,2BChCyBE,GAAzCD,EAPsC,EAOtCA,YAPsC,KAOzBD,wBD0CA,WAAO,IAElBrD,EAAYpC,cAAZoC,QACFC,EAAQC,EAARD,IACFE,EAAIC,OAAOJ,GACTK,EAAkBL,EAASM,EAAOH,GAAP,KAAoB,GAAKI,IAAUC,YAC9DC,EAAqB,IAAIC,IAAMC,UAAUV,GACzCW,EAAgB,IAAIC,IAASR,EAAkBI,GAP5B,EAYzBK,YAAoBF,EAAe,iBAAkB,CACjDG,gBAAiB,0BAFPyC,EAXW,EAWjBvC,KAA8BwC,EAXb,EAWMtC,MAqB/B,OARAC,qBAAU,WACkC,YAApCqC,EAAyBpC,OAC1BC,QAAQC,IAAI,uBAEXD,QAAQC,IAAIkC,KAEjB,CAACA,IAEG,CAAEC,YAbU,SAAC3D,GAGhB,OADAuB,QAAQC,IAAR,+BAAoCxB,IAC7ByD,EAAezD,IAUJ0D,2BCzE2BE,IAA3CD,EARsC,EAQtCA,YARsC,KAQxBD,wBDoFC,WAAO,IAEpBzD,EAAYpC,cAAZoC,QACFC,EAAQC,EAARD,IACFE,EAAIC,OAAOJ,GACTK,EAAkBL,EAASM,EAAOH,GAAP,KAAoB,GAAKI,IAAUC,YAC9DC,EAAqB,IAAIC,IAAMC,UAAUV,GACzCW,EAAgB,IAAIC,IAASR,EAAkBI,GAP1B,EAY3BK,YAAoBF,EAAe,YAAa,CAC5CG,gBAAiB,sBAFP6C,EAXa,EAWnB3C,KAAyB4C,EAXN,EAWD1C,MAqB1B,OARAC,qBAAU,WAC0B,YAA5ByC,EAAiBxC,OAClBC,QAAQC,IAAI,wBAEXD,QAAQC,IAAIsC,KAEjB,CAACA,IAEG,CAACC,YAbW,SAAC/D,GAGhB,OADAuB,QAAQC,IAAR,uBAA4BxB,IACrB6D,EAAU7D,IAUD8D,oBCnHsBD,IAApCE,EATsC,EAStCA,YAaFrB,GAtBwC,EASxBoB,iBAaI,SAACE,GACzB,IACMC,GADmC,KAAvBD,EAAME,OAAO/E,MAAe,GAAKkB,OAAO2D,EAAME,OAAO/E,QAC5CgF,MAAM,KAAKC,KAAI,SAASC,GACjD,OAAOA,EAAKC,UAEd/C,QAAQC,IAAIyC,GACZb,EAAUa,KAMNM,EAAa,WAcjB,GAZe,GAAZtB,IAECM,EAAYZ,GACZS,EAAU,CAAC,MAGA,GAAZH,IACC1B,QAAQC,IAAIyB,GACZU,EAAYhB,GACZS,EAAU,CAAC,MAGA,GAAZH,EACH,CAAI,IAAIuB,EAAS7B,EAAO,GAChB8B,EAAeC,SAASF,GAC5BT,EAAYU,GACZrB,EAAU,CAAC,KAIfF,GAAc,SAACyB,GAAD,OAAoBA,EAAiB,MAM/CC,EAAa,WACjB1B,GAAc,SAACyB,GAAD,OAAoBA,EAAiB,MAMrD,OACE,sBAAKxG,UAAWP,EAAQwB,KAAxB,UACE,cAACyF,EAAA,EAAD,CAAS5B,WAAYA,EAAY6B,YAAY,WAA7C,SACG3B,EAAMiB,KAAI,SAACW,EAAO/E,GAAR,OACT,eAACgF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UAAYF,IACZ,eAACG,EAAA,EAAD,WACE,cAAClG,EAAA,EAAD,UAAawD,EAAexC,EAAM0C,KAClC,qBAAKvE,UAAWP,EAAQyE,iBAAxB,SACE,gCACE,cAACjE,EAAA,EAAD,CACE+G,SAAyB,IAAflC,EACV3E,QAASsG,EACTzG,UAAWP,EAAQsE,OAHrB,kBAOA,cAAC9D,EAAA,EAAD,CACEC,QAAQ,YACRE,MAAM,UACND,QAASiG,EACTpG,UAAWP,EAAQsE,OAJrB,SAMGe,IAAeE,EAAMiC,OAAS,EAAI,SAAW,mBAnB7CL,QA2Bd9B,IAAeE,EAAMiC,QACpB,cAACC,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAW,EAAGpH,UAAWP,EAAQ2E,eAA/C,SACE,cAACvD,EAAA,EAAD,yDC3JV,IAAM9B,EAAYC,YAAW,CACzBiC,KAAM,CACF5B,QAAS,OACTC,eAAe,eACf+H,SAAU,UASLC,EAAW,WAAO,IAAD,EACtB7H,EAAUV,IADY,EAECW,cAArBoC,EAFoB,EAEpBA,QAASnC,EAFW,EAEXA,QACX4H,EAAM5H,GAAoB,aAC5BsC,EAAMC,OAAOJ,GACXC,EAAQC,EAARD,IACAI,EAAmBL,EACrBM,EAAOH,GAAP,KAAoB,GACpBI,IAAUC,YACRC,EAAqB,IAAIC,IAAMC,UAAUV,GATnB,YAW1ByF,YAAgB,CACdzF,IAAKQ,EACLkF,QAAStF,EACTuF,OAAQ,oBACRC,KAAM,YAfkB,QAgBpB,GANDC,EAVqB,oBAoB5B,OAAIA,EAEE,qBAAK5H,UAAWP,EAAQwB,KAAxB,SACC2G,EAAO3B,KAAI,SAAC4B,EAAOhG,GAClB,OAAO,cAACF,EAAD,CAAWC,KAAMiG,EAAEjG,KAAMC,MAAOA,SAO7C,gCACE,uGAIA,0DAA2B0F,SAIpBO,GAAc,WACT/I,IADgB,IAAD,MAEFW,cAArBoC,EAFuB,EAEvBA,QAASnC,EAFc,EAEdA,QACX4H,EAAM5H,GAAoB,aAC5BsC,EAAMC,OAAOJ,GACXC,EAAQC,EAARD,IACAI,EAAmBL,EACrBM,EAAOH,GAAP,KAAoB,GACpBI,IAAUC,YACRC,EAAqB,IAAIC,IAAMC,UAAUV,GAThB,YAW7ByF,YAAgB,CACdzF,IAAKQ,EACLkF,QAAStF,EACTuF,OAAQ,oBACRC,KAAM,YAfqB,QAgBvB,GANDC,EAVwB,gCAmB7BJ,YAAgB,CACdzF,IAAKQ,EACLkF,QAAStF,EACTuF,OAAQ,eACRC,KAAM,YAvBqB,QAwBvB,GANCI,EAlBsB,oBA4BtBC,EAAaD,EAAYxB,SAAS0B,sBAAYF,EAAW,IAAM,EAE1E,OAAIH,EAEI,8BACCA,EAAO3B,KAAI,SAAC4B,GACX,IAAIK,EAAaN,EAASrB,SAAS0B,sBAAYJ,EAAEM,UAAW,IAAM,EAGlE,OACI,gCACI,6BAAKN,EAAEjG,OAEP,cAAC,EAAD,CAAmBT,OAAQ6G,EAAI5G,MAAO8G,YAc9C,gCACN,4FAIA,0DAA2BX,SAIlBa,GAAY,WAEvB,OACE,8BACE,cAAC,EAAD,OC/HArJ,GAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CgC,KAAM,CACJO,SAAU,EACV6G,gBAAiBpJ,EAAMqJ,QAAQC,WAAWC,WAI/B,SAASC,GAAQC,GAC9B,IAAMjJ,EAAUV,KACTY,EAAYD,cAAZC,QAFiC,EAGdiF,IAAMC,SAAS,KAHD,mBAGjC7D,EAHiC,KAG1B2H,EAH0B,KAKlCC,EAAe,SAAC/C,EAA8BgD,GAClDF,EAASE,IAN6B,EASFjE,IAAMC,UAAS,GATb,mBASjCiE,EATiC,KASpBC,EAToB,KAiBxC,OAAGL,EAAKM,QACFF,GAAcJ,EAAKM,SAAWrJ,EAChCoJ,GAAe,GAEd3F,QAAQC,KAAI,GAEP,qBAAKrD,UAAWP,EAAQwB,KAAxB,SAML,eAACgI,EAAA,EAAD,CAAYjI,MAAOA,EAAnB,UACC,cAACkI,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CAAS1E,SAAUkE,EAAcS,aAAW,sBAA5C,UACE,cAACC,EAAA,EAAD,CAAK1C,MAAM,OAAO5F,MAAM,MACxB,cAACsI,EAAA,EAAD,CAAK1C,MAAM,UAAU5F,MAAM,MAC3B,cAACsI,EAAA,EAAD,CAAK1C,MAAM,WAAY5F,MAAM,IAAIgG,SAAU8B,SAK/C,cAACS,EAAA,EAAD,CAAUvI,MAAM,IAAhB,SAGI,cAAC,EAAD,MAIJ,cAACuI,EAAA,EAAD,CAAUvI,MAAM,IAAhB,SACK,cAAC,GAAD,MAKL,cAACuI,EAAA,EAAD,CAAUvI,MAAM,IAAhB,SAIE,cAAC,GAAD,YAQC,qBAAKhB,UAAWP,EAAQwB,KAAxB,SAML,eAACgI,EAAA,EAAD,CAAYjI,MAAOA,EAAnB,UACC,cAACkI,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,CAAS1E,SAAUkE,EAAcS,aAAW,sBAA5C,UACE,cAACC,EAAA,EAAD,CAAK1C,MAAM,OAAO5F,MAAM,MACxB,cAACsI,EAAA,EAAD,CAAK1C,MAAM,UAAU5F,MAAM,WAM/B,cAACuI,EAAA,EAAD,CAAUvI,MAAM,IAAhB,SAGI,cAAC,EAAD,MAIJ,cAACuI,EAAA,EAAD,CAAUvI,MAAM,IAAhB,SACK,cAAC,GAAD,W,wBC5FCwI,GAAO,WAAO,IAAD,IACI9J,cAApBoC,EADgB,EAChBA,QAEFG,GAHkB,EACRtC,QAEJuC,OAAOJ,IACXC,EAAQC,GAARD,IACAI,EAAmBL,EACrBM,GAAOH,GAAP,KAAoB,GACpBI,IAAUC,YACRC,EAAqB,IAAIC,IAAMC,UAAUV,GARzB,YAUpByF,YAAgB,CACdzF,IAAKQ,EACLkF,QAAStF,EACTuF,OAAQ,QACRC,KAAM,YAdY,QAed,GAND8B,EATe,sBAoB4B5E,mBAAiB,GApB7C,6BAwBxB,OACE,eAACtE,EAAA,EAAD,CAAKqD,UAAU,OAAO8F,EAAG,EAAzB,UACE,4CAED,mEAAoCD,KAyBjC,cAAChB,GAAD,CAASO,OAAQS,QCxDZE,GAAQ,WAAO,IAAD,IAEMjK,cAArBoC,EAFe,EAEfA,QAASnC,EAFM,EAENA,QACX4H,EAAM5H,GAAoB,aAC5BsC,EAAMC,OAAOJ,GACXC,EAAQC,EAARD,IACAI,EAAmBL,EACrBM,EAAOH,GAAP,KAAoB,GACpBI,IAAUC,YACRC,EAAqB,IAAIC,IAAMC,UAAUV,GATxB,YAWrByF,YAAgB,CACdzF,IAAKQ,EACLkF,QAAStF,EACTuF,OAAQ,WACRC,KAAM,YAfa,QAgBf,GANDC,EAVgB,oBAkBnBgC,EAAUhC,GAAQ,EAAIA,EAAQ,EAElC,OAAIA,EAEE,gCACF,0DAA2BL,KAC3B,mDAAoBqC,QAOtB,yBCDSC,OAjCf,WACE,OAEE,cAACC,EAAA,EAAD,CAAcC,OAAQ,CACpBC,gBAAiB,CAACC,IAAQC,QAD5B,SAIE,eAACC,EAAA,EAAD,CAAY5I,SAAS,KAArB,UACA,cAAC,EAAD,IAEE,gCAGE,cAAC,GAAD,IAGA,cAAC,GAAD,aCXK6I,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a4e8566c.chunk.js","sourcesContent":["import { Button, makeStyles } from \"@material-ui/core\"\r\nimport { useEthers } from \"@usedapp/core\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        justifyContent: \"flex-end\",\r\n        gap: theme.spacing(1)\r\n    },\r\n}))\r\n\r\n\r\nexport const Header = () => {\r\n    const classes = useStyles()\r\n\r\n    const { account, activateBrowserWallet, deactivate } = useEthers()\r\n\r\n    const isConnected = account !== undefined\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {isConnected ? (\r\n                <Button variant=\"contained\" onClick={deactivate}>\r\n                    Disconnect\r\n                </Button>\r\n            ) : (\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => activateBrowserWallet()}\r\n                >\r\n                    Connect\r\n                </Button>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress, { LinearProgressProps } from '@material-ui/core/LinearProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction LinearProgressWithLabel(props: LinearProgressProps & { value: number }) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value,\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\ninterface VoteCalc\r\n{\r\n    totalV:Number,\r\n    voteC:Number\r\n};\r\n\r\nexport default function LinearWithValueLabel({totalV,voteC}:VoteCalc) {\r\n  const classes = useStyles();\r\n  let per_vote:number=(Number(voteC)/Number(totalV))*100\r\n  // console.log(`per ${per_vote}` )\r\n\r\n//   const [progress, setProgress] = React.useState(3);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n       \r\n      <LinearProgressWithLabel value={per_vote} />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useVote } from \"../hooks/useVote\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 354,\r\n    flexGrow:1\r\n    \r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\ninterface candidateprpos\r\n{\r\n    name:string,\r\n    index:number\r\n\r\n}\r\n\r\n\r\nexport default function MediaCard({name,index}:candidateprpos) {\r\n  const classes = useStyles();\r\n  const { test_call, test_win_status } = useVote();\r\n  const handleVote = () => {\r\n    return test_call(index);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {name}\r\n          </Typography>\r\n  \r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        {/* <Button size=\"small\" color=\"primary\">\r\n          Share\r\n        </Button> */}\r\n       <Button onClick={handleVote} variant=\"contained\" color=\"primary\">\r\n        Vote\r\n      </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","\r\nimport {  useEffect, useState } from \"react\"\r\nimport { useEthers, useContractFunction } from \"@usedapp/core\"\r\nimport { constants, utils } from \"ethers\"\r\n\r\n// import Test_try from \"../chain-info/contracts/test_try.json\"\r\nimport Vote from \"../chain-info/contracts/Vote.json\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\nimport netmap from \"../chain-info/deployments/map.json\";\r\n\r\nexport const useVote = () => {\r\n\r\n    const { chainId } = useEthers()\r\n    let { abi } = Vote\r\n    let cID=String(chainId)\r\n    const contract_address= chainId ?netmap[cID][\"Vote\"][0] : constants.AddressZero\r\n    const Contract_Interface = new utils.Interface(abi)\r\n    const Vote_Contract = new Contract(contract_address, Contract_Interface)\r\n    \r\n    \r\n    //creating functions to interact with\r\n    const { send: vote , state: test_win_status } =\r\n    useContractFunction(Vote_Contract, \"voteCandidate\", {\r\n        transactionName: \"win called\",\r\n    })\r\n\r\n    // const { send: test_increase , state: test_win_status } =\r\n    // useContractFunction(test_try_Contract, \"win\", {\r\n    //     transactionName: \"Win called\",\r\n    // })\r\n    // useContractCall({\r\n    //     abi: Contract_Interface,\r\n    //     address: contract_address,\r\n    //     method: 'Increase',\r\n    //     args: [],\r\n    //   } )\r\n    //   function seeWin( ) {\r\n   \r\n    //     return value\r\n    //   }   \r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n// wrapper\r\n\r\n    const test_call = (index:number) => {\r\n        \r\n        return vote(index)\r\n    }\r\n    useEffect(() => {\r\n        if (test_win_status.status === \"Success\") {\r\n           console.log(\"done\")\r\n        } else {\r\n            console.log(test_win_status)\r\n        }\r\n    }, [test_win_status])\r\n\r\n    return { test_call, test_win_status }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const AddCandidates = () => {\r\n\r\n    const { chainId } = useEthers()\r\n    let { abi } = Vote\r\n    let cID=String(chainId)\r\n    const contract_address= chainId ?netmap[cID][\"Vote\"][0] : constants.AddressZero\r\n    const Contract_Interface = new utils.Interface(abi)\r\n    const Vote_Contract = new Contract(contract_address, Contract_Interface)\r\n    \r\n    \r\n    //creating functions to interact with\r\n    const { send: setaddCandidateBulk , state: addCandidateBulk_status } =\r\n    useContractFunction(Vote_Contract, \"addCandidateBulk\", {\r\n        transactionName: \"addCandidateBulk called\",\r\n    })\r\n\r\n\r\n// wrapper\r\n\r\n    const AddBulkCand= (index:Array<string>) => {\r\n\r\n        console.log(`from add bulk cand : ${index}`)\r\n        return setaddCandidateBulk(index)\r\n    }\r\n    useEffect(() => {\r\n        if (addCandidateBulk_status.status === \"Success\") {\r\n           console.log(\"Add bulk  done\")\r\n        } else {\r\n            console.log(setaddCandidateBulk)\r\n        }\r\n    }, [addCandidateBulk_status])\r\n\r\n    return { AddBulkCand, addCandidateBulk_status }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const AddVote = () => {\r\n\r\n    const { chainId } = useEthers()\r\n    let { abi } = Vote\r\n    let cID=String(chainId)\r\n    const contract_address= chainId ?netmap[cID][\"Vote\"][0] : constants.AddressZero\r\n    const Contract_Interface = new utils.Interface(abi)\r\n    const Vote_Contract = new Contract(contract_address, Contract_Interface)\r\n    \r\n    \r\n    //creating functions to interact with\r\n    const { send: setaddVoteBulk , state: addCandidateVote_status } =\r\n    useContractFunction(Vote_Contract, \"addVoterseBulk\", {\r\n        transactionName: \"addVoterseBulk called\",\r\n    })\r\n\r\n\r\n// wrapper\r\n\r\n    const AddBulkVote= (index:Array<string>) => {\r\n\r\n        console.log(`from add bulk vote : ${index}`)\r\n        return setaddVoteBulk(index)\r\n    }\r\n    useEffect(() => {\r\n        if (addCandidateVote_status .status === \"Success\") {\r\n           console.log(\"Add bulk vote  done\")\r\n        } else {\r\n            console.log(addCandidateVote_status )\r\n        }\r\n    }, [addCandidateVote_status ])\r\n\r\n    return { AddBulkVote, addCandidateVote_status  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const StartVote = () => {\r\n\r\n    const { chainId } = useEthers()\r\n    let { abi } = Vote\r\n    let cID=String(chainId)\r\n    const contract_address= chainId ?netmap[cID][\"Vote\"][0] : constants.AddressZero\r\n    const Contract_Interface = new utils.Interface(abi)\r\n    const Vote_Contract = new Contract(contract_address, Contract_Interface)\r\n    \r\n    \r\n    //creating functions to interact with\r\n    const { send: StartVote , state: StartVote_status } =\r\n    useContractFunction(Vote_Contract, \"startVote\", {\r\n        transactionName: \"start vote called\",\r\n    })\r\n\r\n\r\n// wrapper\r\n\r\n    const StartVoting= (index:number) => {\r\n\r\n        console.log(`from start : ${index}`)\r\n        return StartVote(index)\r\n    }\r\n    useEffect(() => {\r\n        if (StartVote_status.status === \"Success\") {\r\n           console.log(\"Add start vote  done\")\r\n        } else {\r\n            console.log(StartVote_status )\r\n        }\r\n    }, [StartVote_status ])\r\n\r\n    return {StartVoting,StartVote_status  }\r\n\r\n\r\n\r\n\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Input  } from \"@material-ui/core\";\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { AddCandidates,AddVote,StartVote } from \"../hooks/useVote\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    button: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n      marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n      padding: theme.spacing(3),\r\n    },\r\n  }),\r\n);\r\n\r\nfunction getSteps() {\r\n  return ['Add Candidates', 'Add Voters', 'Start Vote'];\r\n}\r\n\r\nfunction getStepContent(step: number,handleInputChange:any,amount:Array<string>) {\r\n\r\n\r\n\r\n\r\n  switch (step) {\r\n    case 0:\r\n      \r\n\r\n      return(<div>\r\n          <Input onChange={handleInputChange}></Input>\r\n          {/* <div>\r\n              {amount}\r\n          </div> */}\r\n      </div>);\r\n    case 1:\r\n      return (<div>\r\n        <Input onChange={handleInputChange}></Input>\r\n        {/* <div>\r\n            {amount}\r\n        </div> */}\r\n    </div>);\r\n    case 2:\r\n        return (<div>\r\n            <Input onChange={handleInputChange}></Input>\r\n            {/* <div>\r\n                {amount}\r\n            </div> */}\r\n        </div>);\r\n    default:\r\n      return 'Unknown step';\r\n  }\r\n}\r\n\r\nexport default function VerticalLinearStepper() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n  \r\n  const [amount, setAmount] = React.useState< Array< string>>([\"\"])\r\n  \r\n  const { AddBulkCand, addCandidateBulk_status } = AddCandidates();\r\n  const { AddBulkVote,  addCandidateVote_status  } = AddVote();\r\n  const { StartVoting,  StartVote_status  } = StartVote();\r\n \r\n  \r\n//   const handleInputAddCandChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n//       const newAmount = event.target.value === \"\" ? \"\" : String(event.target.value)\r\n//       const valueArray=newAmount.split(\",\").map(function(item) {\r\n//         return item.trim();\r\n//       })\r\n      \r\n//       console.log(valueArray )\r\n//       return AddBulkCand(valueArray);\r\n//   }\r\n\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newAmount = event.target.value === \"\" ? \"\" : String(event.target.value)\r\n    const valueArray=newAmount.split(\",\").map(function(item) {\r\n      return item.trim();\r\n    })    \r\n    console.log(valueArray )\r\n    setAmount(valueArray)\r\n    \r\n}\r\n\r\n\r\n\r\n  const handleNext = () => {\r\n    \r\n    if(activeStep==0)\r\n    {\r\n        AddBulkCand(amount)\r\n        setAmount([\"\"])\r\n\r\n    }\r\n    if(activeStep==1)\r\n    {   console.log(activeStep)\r\n        AddBulkVote(amount)\r\n        setAmount([\"\"])\r\n  \r\n    }\r\n    if(activeStep==2 )\r\n    {   let time_val=amount[0]\r\n        let int_time_value=parseInt(time_val)\r\n        StartVoting(int_time_value)\r\n        setAmount([\"\"])\r\n    }\r\n\r\n\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    \r\n    \r\n    \r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n              <Typography>{getStepContent(index,handleInputChange,amount)}</Typography>\r\n              <div className={classes.actionsContainer}>\r\n                <div>\r\n                  <Button\r\n                    disabled={activeStep === 0}\r\n                    onClick={handleBack}\r\n                    className={classes.button}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={0} className={classes.resetContainer}>\r\n          <Typography>All steps completed - you&apos;re finished</Typography>\r\n\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}","import { useEthers, useContractCall } from \"@usedapp/core\";\r\nimport netmap from \"../chain-info/deployments/map.json\";\r\nimport { constants } from \"ethers\";\r\nimport { formatUnits } from \"@ethersproject/units\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useVote } from \"../hooks/useVote\";\r\nimport VotepercentageBar from \"./VotepercentageBar\";\r\nimport { utils } from \"ethers\";\r\n// import Card from '@material-ui/core/Card';\r\nimport MediaCard from \"./ModifiedCard\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Vote from \"../chain-info/contracts/Vote.json\";\r\nimport  Stepper  from \"./stepper\";\r\n// import Test_try from \"../chain-info/contracts/test_try.json\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent:'space-evenly',\r\n        flexWrap: 'wrap'\r\n      \r\n    },\r\n \r\n  });\r\n\r\n\r\n\r\n\r\nexport const PageVote = () => {\r\n  const classes = useStyles();\r\n  const { chainId, account } = useEthers();\r\n  const acc = account ? account : \"no account\";\r\n  let cID = String(chainId);\r\n  let { abi } = Vote;\r\n  const contract_address = chainId\r\n    ? netmap[cID][\"Vote\"][0]\r\n    : constants.AddressZero;\r\n  const Contract_Interface = new utils.Interface(abi);\r\n  const [value2] =\r\n    useContractCall({\r\n      abi: Contract_Interface,\r\n      address: contract_address,\r\n      method: \"getCandidateArray\",\r\n      args: [],\r\n    }) ?? [];\r\n\r\n\r\n\r\n  if (value2) {\r\n    return (\r\n        <div className={classes.root} >\r\n        {value2.map((e: any,index:number) => {\r\n          return <MediaCard name={e.name} index={index}/>;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>\r\n      Either no candiates to vote for  or You haven't connected your wallet\r\n      </h3>\r\n            \r\n      <div>{`your account is : ${acc}`}</div>\r\n    </div>\r\n  );\r\n};\r\nexport const PageResults = () => {\r\n  const classes = useStyles();\r\n  const { chainId, account } = useEthers();\r\n  const acc = account ? account : \"no account\";\r\n  let cID = String(chainId);\r\n  let { abi } = Vote;\r\n  const contract_address = chainId\r\n    ? netmap[cID][\"Vote\"][0]\r\n    : constants.AddressZero;\r\n  const Contract_Interface = new utils.Interface(abi);\r\n  const [value2] =\r\n    useContractCall({\r\n      abi: Contract_Interface,\r\n      address: contract_address,\r\n      method: \"getCandidateArray\",\r\n      args: [],\r\n    }) ?? [];\r\n\r\n    const [Totalvote] =\r\n    useContractCall({\r\n      abi: Contract_Interface,\r\n      address: contract_address,\r\n      method: \"total_voters\",\r\n      args: [],\r\n    }) ?? [];\r\n    // console.log(Totalvote)\r\n\r\n\r\n     const Tv: number = Totalvote ? parseInt(formatUnits(Totalvote, 0)) : 0;\r\n    \r\nif (value2) {\r\n    return (\r\n        <div  >\r\n        {value2.map((e: any) => {  \r\n          let vc: number = value2 ? parseInt(formatUnits(e.voteCount, 0)) : 0\r\n            \r\n\r\n          return(\r\n              <div>\r\n                  <h2>{e.name}</h2>\r\n                  \r\n                  <VotepercentageBar totalV={Tv} voteC={vc}/>\r\n              </div>\r\n          ) ;\r\n        })}\r\n\r\n        \r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n    \r\n\r\n  return (<div>\r\n    <h3>\r\n    Either no candiates   or You haven't connected your wallet\r\n    </h3>\r\n          \r\n    <div>{`your account is : ${acc}`}</div>\r\n  </div>);\r\n};\r\n\r\nexport const AdminPage = () => {\r\n  //input accounts,start,candidates\r\n  return (\r\n    <div>\r\n      <Stepper/>\r\n    </div>\r\n  );\r\n};\r\n","import React ,{ useEffect} from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport { useEthers } from \"@usedapp/core\";\r\n\r\n\r\nimport {PageResults, PageVote,AdminPage} from \"./pageVote\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function LabTabs(prop:any) {\r\n  const classes = useStyles();\r\n  const {account } = useEthers();\r\n  const [value, setValue] = React.useState('1');\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [tabDisabled, setTabDisabled] = React.useState(true);\r\n\r\n  \r\n  \r\n   \r\n\r\n\r\n\r\n  if(prop.vowner ){\r\n    if (tabDisabled&& prop.vowner === account) {\r\n      setTabDisabled(false)\r\n   } else {\r\n       console.log(false)\r\n   }\r\n    return (<div className={classes.root}>\r\n\r\n        \r\n       \r\n       {/* {console.log(`yooooooooooo ${prop.vowner.toString()===account?.toString()}`)} */}\r\n  \r\n       <TabContext value={value}>\r\n        <AppBar position=\"static\">\r\n          <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n            <Tab label=\"Vote\" value=\"1\" />\r\n            <Tab label=\"Results\" value=\"2\" />\r\n            <Tab label=\"Disabled\"  value=\"3\" disabled={tabDisabled}  />\r\n          \r\n  \r\n          </TabList>\r\n        </AppBar>\r\n        <TabPanel value=\"1\">\r\n            \r\n            \r\n            <PageVote/>\r\n            \r\n        </TabPanel>\r\n        \r\n        <TabPanel value=\"2\">\r\n             <PageResults/>\r\n        \r\n        \r\n        \r\n        </TabPanel>\r\n        <TabPanel value=\"3\">\r\n          \r\n\r\n\r\n          <AdminPage/>\r\n\r\n        </TabPanel>\r\n\r\n      </TabContext>\r\n    </div>);\r\n  }\r\n  else{\r\n    return(<div className={classes.root}>\r\n\r\n        \r\n       \r\n      {/* {console.log(`yooooooooooo ${prop.vowner.toString()===account?.toString()}`)} */}\r\n \r\n      <TabContext value={value}>\r\n       <AppBar position=\"static\">\r\n         <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n           <Tab label=\"Vote\" value=\"1\" />\r\n           <Tab label=\"Results\" value=\"2\" />\r\n           {/* <Tab label=\"Disabled\"  value=\"3\" disabled={tabDisabled}  /> */}\r\n         \r\n \r\n         </TabList>\r\n       </AppBar>\r\n       <TabPanel value=\"1\">\r\n           \r\n           \r\n           <PageVote/>\r\n           \r\n       </TabPanel>\r\n       \r\n       <TabPanel value=\"2\">\r\n            <PageResults/>\r\n       \r\n       \r\n       \r\n       </TabPanel>\r\n       {/* <TabPanel value=\"3\">\r\n         \r\n\r\n\r\n         <AdminPage/>\r\n\r\n       </TabPanel> */}\r\n\r\n     </TabContext>\r\n   </div>);\r\n  }\r\n\r\n}","import { useEthers } from \"@usedapp/core\";\r\nimport { TabContext, TabList, TabPanel } from \"@material-ui/lab\";\r\nimport { Tab } from \"@material-ui/core\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport LabTabs from \"./tabs\";\r\nimport {  useContractCall } from \"@usedapp/core\";\r\nimport netmap from \"../deployments/map.json\";\r\nimport { constants } from \"ethers\";\r\nimport { utils } from \"ethers\";\r\n\r\n\r\nimport Vote from \"../contracts/Vote.json\";\r\n\r\n\r\nexport const Main = () => {\r\n  const { chainId,account } = useEthers();\r\n  const acc = account ? account : \"no account\";\r\n    let cID = String(chainId);\r\n    let { abi } = Vote;\r\n    const contract_address = chainId\r\n      ? netmap[cID][\"Vote\"][0]\r\n      : constants.AddressZero;\r\n    const Contract_Interface = new utils.Interface(abi);\r\n    const [owner] =\r\n      useContractCall({\r\n        abi: Contract_Interface,\r\n        address: contract_address,\r\n        method: \"owner\",\r\n        args: [],\r\n      }) ?? [];\r\n  \r\n\r\n\r\n\r\n  const [selectedTokenIndex, setSelectedTokenIndex] = useState<number>(0)\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: string) => {\r\n    setSelectedTokenIndex(parseInt(newValue))\r\n}\r\n  return (\r\n    <Box component=\"span\" m={1}>\r\n      <h1>Voting app</h1>\r\n     \r\n     <h3>{`Contract Creator's Account: ${owner}`}</h3>\r\n\r\n{/* tabs */}\r\n        \r\n\r\n      {/* <TabContext value={selectedTokenIndex.toString()}>\r\n                    <TabList onChange={handleChange}  aria-label=\"stake form tabs\">\r\n                    <Tab label=\"vote\"\r\n                        value={\"0\"}\r\n                        key={0} />\r\n\r\n                        \r\n                    <Tab label=\"Results\"\r\n                        value={\"1\"}\r\n                        key={1} />       \r\n                    </TabList>\r\n\r\n                    {`your account is : ${acc}`}\r\n\r\n\r\n\r\n\r\n\r\n        </TabContext>    */}\r\n\r\n        <LabTabs vowner={owner}/>         \r\n\r\n\r\n\r\n\r\n\r\n    </Box>\r\n  );\r\n};\r\n","import { useEthers, useContractCall } from \"@usedapp/core\";\r\nimport netmap from \"../chain-info/deployments/map.json\";\r\nimport { constants } from \"ethers\";\r\n\r\nimport { utils } from \"ethers\";\r\n\r\n\r\nimport Vote from \"../chain-info/contracts/Vote.json\";\r\n\r\n// import { time } from \"console\";\r\n\r\n\r\nexport const VInfo = () => {\r\n    \r\n    const { chainId, account } = useEthers();\r\n    const acc = account ? account : \"no account\";\r\n    let cID = String(chainId);\r\n    let { abi } = Vote;\r\n    const contract_address = chainId\r\n      ? netmap[cID][\"Vote\"][0]\r\n      : constants.AddressZero;\r\n    const Contract_Interface = new utils.Interface(abi);\r\n    const [value2] =\r\n      useContractCall({\r\n        abi: Contract_Interface,\r\n        address: contract_address,\r\n        method: \"timeleft\",\r\n        args: [],\r\n      }) ?? [];\r\n  \r\n    let timeShow=(value2>=0)? value2: 0\r\n  \r\n    if (value2) {\r\n      return (\r\n          <div  >\r\n        <div>{`your account is : ${acc}`}</div>\r\n        <div>{`timeleft : ${timeShow}`}</div>\r\n\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n                \r\n      </div>\r\n    );\r\n  };","import React from 'react';\nimport { ChainId, DAppProvider } from \"@usedapp/core\"\nimport { Header } from \"./components/Header\"\n// import {Container} from \"@material-ui/core\"\nimport { Container } from \"@material-ui/core\"\nimport { Main } from \"./components/Mains\"\nimport {VInfo } from \"./components/time\"\n\n\nfunction App() {\n  return (\n\n    <DAppProvider config={{\n      supportedChains: [ChainId.Kovan],\n    }}>\n\n      <Container  maxWidth=\"lg\">\n      <Header/>\n      \n        <div>\n         \n       \n          <Main/>\n\n\n          <VInfo/>\n        </div>\n     \n      </Container>\n\n\n\n    \n\n    </DAppProvider>\n\n\n\n  \n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}